#export:Function $restorePlayerSpriteVisibilty {
    LIO t0, 800E12F4
    LIO t1, 3C03800A %LUI v1, 800A instruction as hex
    SW t1, 0000 (t0)
    LIO t1, 8463A634 %LH v1, A634 (v1) instruction as hex
    SW t1, 0004 (t0)
    JR RA
    ORI v0, r0, 2 %ApiStatus_DONE2
}

#export:Function $removePlayerSpriteVisibilty {
    LIO t0, 800E12F4
    LIO t1, 03E00008 %JR RA instruction as hex
    SW t1, 0000 (t0)
    SW r0, 0004 (t0) %store NOP
    JR RA
    ORI v0, r0, 2 %ApiStatus_DONE2
}

#export:Function $removeSnowprints {
    LIO t0, 8006FD10 %27BDFFD0
    LIO t1, 03E00008 %JR RA instruction as hex
    SW t1, 0000 (t0)
    SW r0, 0004 (t0)
    JR RA
    ORI v0, r0, 2
}

#export:Function $restoreSnowprints {
    LIO t0, 8006FD10
    LIO t1, 27BDFFD0 %ADDIU	SP, SP, -0x30 instruction as hex
    SW t1, 0000 (t0)
    LIO t1, AFA40010 %SW A0, 0x0010 (SP) instruction as hex
    SW t1, 0004 (t0)
    JR RA
    ORI v0, r0, 2
}

#new:Data $partnerCopyPlayerPositionBool {
    0
}

#export:Function $partnerPositionBoolOn {
    LIO t0, $partnerCopyPlayerPositionBool
    ORI t1, r0, 1
    SW t1, 0000 (t0)
    JR RA
    ORI v0, r0, 2
}

#export:Function $partnerPositionBoolOff {
    LIO t0, $partnerCopyPlayerPositionBool
    SW r0, 0000 (t0)
    JR RA
    ORI v0, r0, 2
}

@Hook:Global 800EE240 {
    LAW t0, $partnerCopyPlayerPositionBool
    LUI	AT, 3FA0 %normal instruction
    BNEL t0, r0, .normalExit
    LUI	AT, 4100 %partner position will equal player position
    .normalExit
    J 800EE248
    MTC1 at, f3 %restore from hook
}

#export:Function $Function_80241174
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o24
   10:  SW        RA, 14 (SP)
   14:  SW        R0, 70 (S0)
   18:  SW        R0, 74 (S0)
   1C:  SW        R0, 78 (S0)
   20:  SW        R0, 7C (S0)
        .o24
   24:  LW        V0, 70 (S0)
   28:  BNE       V0, R0, .o64
   2C:  NOP
   30:  LW        V1, A8 (S0)
   34:  LW        V0, 88 (S0)
   38:  ADDU      V1, V1, V0
   3C:  BGEZ      V1, .o50
   40:  SW        V1, A8 (S0)
   44:  LUI       V0, 2
   48:  BEQ       R0, R0, .o60
   4C:  ADDU      V0, V1, V0
        .o50
   50:  LUI       A0, 2
   54:  SLT       V0, A0, V1
   58:  BEQ       V0, R0, .o64
   5C:  SUBU      V0, V1, A0
        .o60
   60:  SW        V0, A8 (S0)
        .o64
   64:  LW        V0, 74 (S0)
   68:  BNE       V0, R0, .oA4
   6C:  NOP
   70:  LW        V1, AC (S0)
   74:  LW        V0, 8C (S0)
   78:  ADDU      V1, V1, V0
   7C:  BGEZ      V1, .o90
   80:  SW        V1, AC (S0)
   84:  LUI       V0, 2
   88:  BEQ       R0, R0, .oA0
   8C:  ADDU      V0, V1, V0
        .o90
   90:  LUI       A0, 2
   94:  SLT       V0, A0, V1
   98:  BEQ       V0, R0, .oA4
   9C:  SUBU      V0, V1, A0
        .oA0
   A0:  SW        V0, AC (S0)
        .oA4
   A4:  LW        V0, 78 (S0)
   A8:  BNE       V0, R0, .oE4
   AC:  NOP
   B0:  LW        V1, B0 (S0)
   B4:  LW        V0, 90 (S0)
   B8:  ADDU      V1, V1, V0
   BC:  BGEZ      V1, .oD0
   C0:  SW        V1, B0 (S0)
   C4:  LUI       V0, 2
   C8:  BEQ       R0, R0, .oE0
   CC:  ADDU      V0, V1, V0
        .oD0
   D0:  LUI       A0, 2
   D4:  SLT       V0, A0, V1
   D8:  BEQ       V0, R0, .oE4
   DC:  SUBU      V0, V1, A0
        .oE0
   E0:  SW        V0, B0 (S0)
        .oE4
   E4:  LW        V0, 7C (S0)
   E8:  BNE       V0, R0, .o124
   EC:  NOP
   F0:  LW        V1, B4 (S0)
   F4:  LW        V0, 94 (S0)
   F8:  ADDU      V1, V1, V0
   FC:  BGEZ      V1, .o110
  100:  SW        V1, B4 (S0)
  104:  LUI       V0, 2
  108:  BEQ       R0, R0, .o120
  10C:  ADDU      V0, V1, V0
        .o110
  110:  LUI       A0, 2
  114:  SLT       V0, A0, V1
  118:  BEQ       V0, R0, .o124
  11C:  SUBU      V0, V1, A0
        .o120
  120:  SW        V0, B4 (S0)
        .o124
  124:  LW        A0, 84 (S0)
  128:  JAL       ~Func:set_main_pan_u
  12C:  LW        A1, A8 (S0)
  130:  LW        A0, 84 (S0)
  134:  JAL       ~Func:set_main_pan_v
  138:  LW        A1, AC (S0)
  13C:  LW        A0, 84 (S0)
  140:  JAL       ~Func:set_aux_pan_u
  144:  LW        A1, B0 (S0)
  148:  LW        A0, 84 (S0)
  14C:  JAL       ~Func:set_aux_pan_v
  150:  LW        A1, B4 (S0)
  154:  LW        V0, 70 (S0)
  158:  LW        V1, 78 (S0)
  15C:  LW        A0, 98 (S0)
  160:  ADDIU     V0, V0, 1
  164:  SW        V0, 70 (S0)
  168:  LW        V0, 74 (S0)
  16C:  ADDIU     V1, V1, 1
  170:  SW        V1, 78 (S0)
  174:  LW        V1, 70 (S0)
  178:  ADDIU     V0, V0, 1
  17C:  SW        V0, 74 (S0)
  180:  LW        V0, 7C (S0)
  184:  SLT       V1, V1, A0
  188:  ADDIU     V0, V0, 1
  18C:  BNE       V1, R0, .o198
  190:  SW        V0, 7C (S0)
  194:  SW        R0, 70 (S0)
        .o198
  198:  LW        V0, 74 (S0)
  19C:  LW        V1, 9C (S0)
  1A0:  SLT       V0, V0, V1
  1A4:  BEQL      V0, R0, .o1AC
  1A8:  SW        R0, 74 (S0)
        .o1AC
  1AC:  LW        V0, 78 (S0)
  1B0:  LW        V1, A0 (S0)
  1B4:  SLT       V0, V0, V1
  1B8:  BEQL      V0, R0, .o1C0
  1BC:  SW        R0, 78 (S0)
        .o1C0
  1C0:  LW        V0, 7C (S0)
  1C4:  LW        V1, A4 (S0)
  1C8:  SLT       V0, V0, V1
  1CC:  BEQL      V0, R0, .o1D4
  1D0:  SW        R0, 7C (S0)
        .o1D4
  1D4:  LW        RA, 14 (SP)
  1D8:  LW        S0, 10 (SP)
  1DC:  CLEAR     V0
  1E0:  JR        RA
  1E4:  ADDIU     SP, SP, 18
}

#export:Function $Function_80241050
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V1, A8 (S0)
   14:  LW        V0, 88 (S0)
   18:  ADDU      V1, V1, V0
   1C:  BGEZ      V1, .o30
   20:  SW        V1, A8 (S0)
   24:  LUI       V0, 2
   28:  BEQ       R0, R0, .o40
   2C:  ADDU      V0, V1, V0
        .o30
   30:  LUI       A0, 2
   34:  SLT       V0, A0, V1
   38:  BEQ       V0, R0, .o44
   3C:  SUBU      V0, V1, A0
        .o40
   40:  SW        V0, A8 (S0)
        .o44
   44:  LW        V1, AC (S0)
   48:  LW        V0, 8C (S0)
   4C:  ADDU      V1, V1, V0
   50:  BGEZ      V1, .o64
   54:  SW        V1, AC (S0)
   58:  LUI       V0, 2
   5C:  BEQ       R0, R0, .o74
   60:  ADDU      V0, V1, V0
        .o64
   64:  LUI       A0, 2
   68:  SLT       V0, A0, V1
   6C:  BEQ       V0, R0, .o78
   70:  SUBU      V0, V1, A0
        .o74
   74:  SW        V0, AC (S0)
        .o78
   78:  LW        V1, B0 (S0)
   7C:  LW        V0, 90 (S0)
   80:  ADDU      V1, V1, V0
   84:  BGEZ      V1, .o98
   88:  SW        V1, B0 (S0)
   8C:  LUI       V0, 2
   90:  BEQ       R0, R0, .oA8
   94:  ADDU      V0, V1, V0
        .o98
   98:  LUI       A0, 2
   9C:  SLT       V0, A0, V1
   A0:  BEQ       V0, R0, .oAC
   A4:  SUBU      V0, V1, A0
        .oA8
   A8:  SW        V0, B0 (S0)
        .oAC
   AC:  LW        V1, B4 (S0)
   B0:  LW        V0, 94 (S0)
   B4:  ADDU      V1, V1, V0
   B8:  BGEZ      V1, .oCC
   BC:  SW        V1, B4 (S0)
   C0:  LUI       V0, 2
   C4:  BEQ       R0, R0, .oDC
   C8:  ADDU      V0, V1, V0
        .oCC
   CC:  LUI       A0, 2
   D0:  SLT       V0, A0, V1
   D4:  BEQ       V0, R0, .oE0
   D8:  SUBU      V0, V1, A0
        .oDC
   DC:  SW        V0, B4 (S0)
        .oE0
   E0:  LW        A0, 84 (S0)
   E4:  JAL       ~Func:set_main_pan_u
   E8:  LW        A1, A8 (S0)
   EC:  LW        A0, 84 (S0)
   F0:  JAL       ~Func:set_main_pan_v
   F4:  LW        A1, AC (S0)
   F8:  LW        A0, 84 (S0)
   FC:  JAL       ~Func:set_aux_pan_u
  100:  LW        A1, B0 (S0)
  104:  LW        A0, 84 (S0)
  108:  JAL       ~Func:set_aux_pan_v
  10C:  LW        A1, B4 (S0)
  110:  LW        RA, 14 (SP)
  114:  LW        S0, 10 (SP)
  118:  CLEAR     V0
  11C:  JR        RA
  120:  ADDIU     SP, SP, 18
}

#export:Script $Script_Update_Sewer_Fog
{
    0:  SetGroup  00000000
    C:  If  *Var5  ==  00000001
   1C:  	If  *Var6  ==  00000001
   2C:  		If  *Var7  ==  00000001
   3C:  			If  *Var8  ==  00000001
   4C:  				Call  $Function_80241050 ( )
   58:  				Return
   60:  			EndIf
   68:  		EndIf
   70:  	EndIf
   78:  EndIf
   80:  Call  $Function_80241174 ( )
   8C:  Return
   94:  End
}

#export:Function $clear_disguise_pointer {
     SAW r0, $_disguise
     SAW r0, $_disguiseAnimList
     JR RA
     NOP
}

#export:Function $ClearDisguisePointer {
     SAW r0, $_disguise
     SAW r0, $_disguiseAnimList
     JR RA
     ORI v0, r0, 2
}

#export:Function $DisableNpcShadow { %script api wrapper for asm function
     ADDIU sp, sp, -20
     SW ra, 0018 (sp)
     SW s1, 0014 (sp)
     SW s0, 0010 (sp)
     LW s0, 000C (a0) %load pointer to script args
     JAL ~Func:get_variable
     LW a0, 0000 (s0) %get npc id
     JAL ~Func:get_npc_by_index
     ADDU a0, v0, r0 %move get_variable result to a0 for get_npc_by_index
     ADDU s1, v0, r0 %move npc pointer to s1
     LW v0, 0000 (s1)
     ANDI v0, v0, 0010
     BEQ v0, r0, .exit
     NOP
     JAL ~Func:get_shadow_by_index
     LW a0, 0078 (s1)
     LUI a0, FFFE
     LW v1, 0000 (v0)
     ORI a0, a0, FFFF
     ORI v1, v1, 0001
     SW v1, 0000 (v0)
     LW v0, 0000 (s1)
     ADDIU v1, r0, FFEF
     AND v0, v0, v1
     AND v0, v0, a0
     SW v0, 0000 (s1) %set shadow invisible
     .exit
     LW ra, 0018 (sp)
     LW s1, 0014 (sp)
     LW s0, 0010 (sp)
     ADDIU sp, sp, 20
     JR RA
     ORI v0, r0, 2 %return api status 2
}

%PLAYER_STATUS_ANIM_FLAGS_USING_PEACH_PHYSICS = 0x00001000,

#export:Function $setPeachPhysics {
     LIO t0, 8010EFCC
     LIO t1, 00001000
     LW t2, 0000 (t0)
     OR t2, t2, t1
     SW t2, 0000 (t0)
     JR RA
     ORI v0, r0, 2
}

#export:Function $unsetPeachPhysics {
     LIO t0, 8010EFCC
     LIO t1, FFFFEFFF
     AND t1, t1, t0
     SW t1, 0000 (t0)
     JR RA
     ORI v0, r0, 2
}

#export:Function $DrawMenuBox
{
    ADDIU        SP, SP, -58
    SW        RA, 50 (SP)
    % setup call to DrawBox
    SW        R0, 10 (SP)    % posZ
    SW        A2, 14 (SP)    % width
    SW        A3, 18 (SP) % height
    SW        T1, 1C (SP) % opacity
    COPY        A2, A0 % posX
    COPY        A3, A1 % posY
    COPY        A1, T0 % flags
    CLEAR        A0 % flags
    SW        R0, 20 (SP) % fogRGB
    SW        R0, 24 (SP) % scaleX (unused)
    SW        R0, 28 (SP) % scaleY (unused)
    SW        R0, 2C (SP) % rotX (unused)
    SW        R0, 30 (SP) % rotY (unused)
    SW        R0, 34 (SP) % rotZ (unused)
    SW        R0, 38 (SP) % unk func
    SW        R0, 3C (SP) % unk func arg0
    SW        R0, 40 (SP) % txMtx (unused)
    SW        R0, 44 (SP) % txShiftY (unused)
    SW        R0, 48 (SP) % txShiftX (unused)
    JAL       800F52E0 %draw_box
    SW        R0, 4C (SP) % unk
    LW        RA, 50 (SP)
    JR        RA
    ADDIU     SP, SP, 58
}